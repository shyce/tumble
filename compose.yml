services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "3005:80"
    depends_on:
      - server
      - client
    networks:
      - tumble_network

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: tumble
      POSTGRES_PASSWORD: tumble_pass
      POSTGRES_DB: tumble
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tumble"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tumble_network

  redis:
    image: redis:7-alpine
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tumble_network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "8082:8082"
    volumes:
      - ./server:/app
    env_file: .env
    environment:
      LOG_LEVEL: DEBUG
      LOG_FORMAT: text
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tumble_network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    volumes:
      - ./client:/app
      - /app/.next
    env_file: .env
    environment:
      API_URL: http://server:8082
      AUTH_SECRET: qG8/yMqJJGb4MJrf4sR1RWpjOTottFOr1SajSgeCmD0=
    depends_on:
      - server
    networks:
      - tumble_network

volumes:
  postgres_data:
  redis_data:

networks:
  tumble_network:
    driver: bridge